---
const pathname = new URL(Astro.request.url).pathname;
const currentPathRoot = pathname.slice(1).split('/').shift();
const activeIfIn = (name: String) => currentPathRoot === name ? 'active' : ''
---

<menu id="main-menu">
    <ul id="themes-selector">
        <li><button data-theme="sandstorm">sandstorm</button></li>
        <li><button data-theme="tape">tape</button></li>
        <li><button data-theme="appolo">appolo</button></li>
        <li><button data-theme="marble">marble</button></li>
        <li class="list-name">th√®mes</li>
    </ul>
    <nav>
        <a class={activeIfIn('contact')} href="/contact">contact</a>
        <a class={activeIfIn('photography')} href="/photography">galerie</a>
        <a class={activeIfIn('resume')} href="/resume">curriculum vitae</a>
        <a class={activeIfIn('projects')} href="/projects">projets</a>
        <a class={activeIfIn('')} href="/">accueil</a>
    </nav>
    <button id="close-menu-button" class="menu-button hidden" onclick="closeMenu()">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m7 7l10 10M7 17L17 7"/>
        </svg>
    </button>
    <button id="open-menu-button" class="menu-button" onclick="openMenu()">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
            <path fill="none" stroke="currentColor" stroke-linejoin="round" stroke-width="3" d="M12.01 12v.01H12V12zm7 0v.01H19V12zm-14 0v.01H5V12z"/>
        </svg>
    </button>
</menu>

<script is:inline>
    const buttonClose = document.getElementById('close-menu-button')
    const buttonOpen = document.getElementById('open-menu-button')
    const menu = document.getElementById('main-menu')

    function closeMenu() {
        menu.classList.remove('opened')
        buttonClose.classList.add('hidden')
        buttonOpen.classList.remove('hidden')
    }

    function openMenu() {
        menu.classList.add('opened')
        buttonOpen.classList.add('hidden')
        buttonClose.classList.remove('hidden')
    }

    document.getElementById('themes-selector').addEventListener('click', ({ target }) => {
        if (target.tagName !== 'BUTTON') return
        theme.setTheme(target.dataset.theme)
    })

    document.addEventListener('theme-changed', ({ detail }) => {
        document.querySelectorAll('#themes-selector button').forEach(button => {
            button.classList.toggle('active', button.dataset.theme === detail.theme)
        })
    })

    document.addEventListener('DOMContentLoaded', () => {
        const currentTheme = theme.getTheme()
        document.querySelectorAll('#themes-selector button').forEach(button => {
            button.classList.toggle('active', button.dataset.theme === currentTheme)
        })
    })
</script>
